name: ARM plugin
on:
  workflow_dispatch:
  pull_request:
    branches:
      - 'releases/**'
      - 'master'
    paths:
      - 'modules/arm_plugin/**'
  push:
    branches:
      - 'master'
      - 'github-actions'

concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: false

jobs:
  Build:
    defaults:
      run:
        shell: bash
    strategy:
      fail-fast: false
      matrix:
        os: ['macos-arm64']
        # os: ['macos-arm64', 'windows-latest-8-cores', 'ubuntu-20.04-16-cores']
    runs-on: ['self-hosted', 'macOS']
    steps:
      - name: Clone OpenVINO with cache
        if: runner.os == 'macOS'
        run: |
          rm -fr openvino
          git clone https://github.com/openvinotoolkit/openvino.git --reference /Users/sandye51/actions-runner/submodules_cache
          cd $GITHUB_WORKSPACE/openvino && git submodule update --init --reference /Users/sandye51/actions-runner/submodules_cache

      - name: Clone OpenVINO
        if: runner.os != 'macOS'
        run: |
          git clone https://github.com/openvinotoolkit/openvino.git
          cd $GITHUB_WORKSPACE/openvino && git submodule update --init

      - uses: actions/setup-python@v4
        if: runner.os != 'macOS'
        id: cp310
        with:
          python-version: '3.10'
          cache: 'pip'
          cache-dependency-path: |
            openvino/src/bindings/python/wheel/requirements-dev.txt
            openvino/src/bindings/python/requirements.txt
            openvino/src/bindings/python/src/compatibility/openvino/requirements-dev.txt
            openvino/src/frontends/paddle/tests/requirements.txt
            openvino/src/frontends/onnx/tests/requirements.txt
            openvino/src/frontends/tensorflow/tests/requirements.txt

      - name: Install python dependencies
        run: |
            python3 -m pip install -U pip
            python3 -m pip install -r openvino/src/bindings/python/wheel/requirements-dev.txt
            python3 -m pip install -r openvino/src/bindings/python/requirements.txt
            python3 -m pip install -r openvino/src/bindings/python/src/compatibility/openvino/requirements-dev.txt
            python3 -m pip install -r openvino/src/frontends/paddle/tests/requirements.txt
            python3 -m pip install -r openvino/src/frontends/onnx/tests/requirements.txt
            # python3 -m pip install -r openvino/src/frontends/tensorflow/tests/requirements.txt

      - name: Install build dependencies
        if: runner.os == 'Linux'
        run: |
          sudo "$GITHUB_WORKSPACE/openvino/install_build_dependencies.sh"

      - name: CMake configure
        id: cmake-configure
        run: |
          echo "::group::Define cmake arguments"
          if [[ "$RUNNER_OS" == "macOS" ]] ; then
            cmake_args=(-DCMAKE_OSX_DEPLOYMENT_TARGET=11.0)
            cmake_args+=(-DARM_COMPUTE_SCONS_JOBS=4)
          fi
          echo "::endgroup::"

          echo "::group::Clean ccache stats"
          ccache --zero-stats --max-size=50G --show-config
          echo "::endgroup::"

          echo "::group::CMake configure"
          cmake "${cmake_args[@]}" \
            -DENABLE_TESTS=ON \
            -DENABLE_CPPLINT=OFF \
            -DCMAKE_CXX_COMPILER_LAUNCHER=ccache \
            -DCMAKE_C_COMPILER_LAUNCHER=ccache \
            -DENABLE_PYTHON=ON \
            -DENABLE_WHEEL=ON \
            -DENABLE_TESTS=ON \
            -S "$GITHUB_WORKSPACE/openvino" \
            -B "$GITHUB_WORKSPACE/build"
          echo "::endgroup::"

      - name: CMake build & install
        run: |
          echo "::group::Cmake build logs"
          cmake --build "$GITHUB_WORKSPACE/build" --parallel --config Release
          cmake --install "$GITHUB_WORKSPACE/build" --strip --config Release --prefix "$GITHUB_WORKSPACE/install"
          echo "::endgroup::"

          echo "::group::Show ccache stats"
          ccache --show-stats
          echo "::endgroup::"

      - name: 'Install wheel packages'
        run: cmake --install "$GITHUB_WORKSPACE/build" --strip --config Release --prefix "$GITHUB_WORKSPACE/install" --component python_wheels
      
      - name: 'Install Python wheels'
        run: python3 -m pip install openvino-dev --find-links="$GITHUB_WORKSPACE/install/tools"

      - name: Run core tests
        run:
          cd "$GITHUB_WORKSPACE/install"
          source setupvars.sh
          ./tests/ov_core_unit_tests
