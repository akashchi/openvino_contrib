name: ARM plugin
on:
  workflow_dispatch:
  pull_request:
    branches:
      - 'releases/**'
      - 'master'
    paths:
      - 'modules/arm_plugin/**'
  push:
    branches:
      - 'master'

concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: false

jobs:
  Build:
    defaults:
      run:
        shell: bash
    strategy:
      fail-fast: false
      matrix:
        os: ["macos-latest", "windows-latest", "ubuntu-latest"]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Clone OpenVINO Contrib
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: Clone OpenVINO
        uses: actions/checkout@v3
        with:
          repository: 'openvinotoolkit/openvino'
          path: openvino
          ref: 'master'
          submodules: true

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Setup scons
        run: python3 -m pip install scons

      - name: Install cross-compiler
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y crossbuild-essential-arm64

      - name: CMake config
        run: |
          if [[ runner.os == "Linux" ]] ; then
            cmake_args="-DCMAKE_TOOLCHAIN_FILE=${{ github.workspace }}/openvino/cmake/arm64.toolchain.cmake"
          elif [[ runner.os == "Windows" ]] ; then
            cmake_args="-A ARM64"
          else
            cmake_args="-DCMAKE_OSX_ARCHITECTURES=arm64"
          endif
          
          cmake $cmake_args \
            -DENABLE_TESTS=ON \
            -DENABLE_CPPLINT=OFF \
            -DENABLE_INTEL_MYRIAD_COMMON=OFF \
            -DOPENVINO_EXTRA_MODULES='${{ github.workspace }}/modules/arm_plugin' \
            -S '${{ github.workspace }}/openvino' \
            -B '${{ github.workspace }}/build'

      - name: CMake build
        run: cmake --build '${{ github.workspace }}/build' --parallel --config Release
